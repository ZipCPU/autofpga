################################################################################
##
## Filename: 	buserr.txt
##
## Project:	AutoFPGA, a utility for composing FPGA designs from peripherals
##
## Purpose:	Provide a readable memory location containing the address of the
##		last bus error.
##
## Creator:	Dan Gisselquist, Ph.D.
##		Gisselquist Technology, LLC
##
################################################################################
##
## Copyright (C) 2017-2019, Gisselquist Technology, LLC
##
## This program is free software (firmware): you can redistribute it and/or
## modify it under the terms of  the GNU General Public License as published
## by the Free Software Foundation, either version 3 of the License, or (at
## your option) any later version.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTIBILITY or
## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
## for more details.
##
## You should have received a copy of the GNU General Public License along
## with this program.  (It's in the $(ROOT)/doc directory.  Run make with no
## target there if the PDF file isn't present.)  If not, see
## <http://www.gnu.org/licenses/> for a copy.
##
## License:	GPL, v3, as defined and found on www.gnu.org,
##		http://www.gnu.org/licenses/gpl.html
##
##
################################################################################
##
##
@PREFIX=buserr
@NADDR=1
@SLAVE.TYPE=SINGLE
@SLAVE.BUS=wb
@SINGLE.INPUT= r_bus_err
@CLOCK.NAME=clk
@$RWID=(@$(zip.MASTER.BUS.AWID) > @$(wbu.MASTER.BUS.AWID)) ? @$(zip.MASTER.BUS.AWID) : @$(wbu.MASTER.BUS.AWID)
@MAIN.DEFNS=
	reg	[@$(RWID)-1:0]	r_@$(PREFIX)_addr;
@MAIN.INSERT=
	always @(posedge @$(CLOCK.WIRE))
	if (@$(zip.MASTER.PREFIX)_err)
	begin
		r_@$(PREFIX)_addr <= 0;
		r_@$(PREFIX)_addr[@$(zip.MASTER.BUS.AWID)-1:0] <= @$(zip.MASTER.PREFIX)_addr[@$(zip.MASTER.BUS.AWID)-1:0];
	end else if (@$(wbu.MASTER.PREFIX)_err)
	begin
		r_@$(PREFIX)_addr <= 0;
		r_@$(PREFIX)_addr[@$(wbu.MASTER.BUS.AWID)-1:0] <= @$(wbu.MASTER.PREFIX)_addr[@$(wbu.MASTER.BUS.AWID)-1:0];
	end
	assign	@$(SLAVE.PREFIX)_stall= 1'b0;
	assign	@$(SLAVE.PREFIX)_ack  = @$(SLAVE.PREFIX)_stb;
	assign	@$(SLAVE.PREFIX)_idata = { {(30-@$(RWID)){1'b0}},
			r_@$(PREFIX)_addr, 2'b00 };
@REGS.N=1
@REGS.0= 0 R_BUSERR BUSERR
@BDEF.IONAME=io_buserr
@BDEF.IOTYPE=unsigned
@BDEF.OSDEF=_BOARD_HAS_BUSERR
@BDEF.OSVAL=static volatile @$THIS.BDEF.IOTYPE *const _buserr = ((@$THIS.BDEF.IOTYPE *)@$[0x%08x](REGBASE));
