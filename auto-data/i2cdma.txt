################################################################################
##
## Filename:	auto-data/i2cdma.txt
##
## Project:	AutoFPGA, a utility for composing FPGA designs from peripherals
## {{{
## Purpose:	Connect an (optional) DMA to the main I2C bus.
##
## Creator:	Dan Gisselquist, Ph.D.
##		Gisselquist Technology, LLC
##
################################################################################
## }}}
## Copyright (C) 2017-2024, Gisselquist Technology, LLC
## {{{
## This program is free software (firmware): you can redistribute it and/or
## modify it under the terms of the GNU General Public License as published
## by the Free Software Foundation, either version 3 of the License, or (at
## your option) any later version.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTIBILITY or
## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
## for more details.
##
## You should have received a copy of the GNU General Public License along
## with this program.  (It's in the $(ROOT)/doc directory.  Run make with no
## target there if the PDF file isn't present.)  If not, see
## <http://www.gnu.org/licenses/> for a copy.
## }}}
## License:	GPL, v3, as defined and found on www.gnu.org,
## {{{
##		http://www.gnu.org/licenses/gpl.html
##
##
################################################################################
##
## }}}
@PREFIX=i2cdma
@DEVID=I2CDMA
@ACCESS=@$(DEVID)_ACCESS
@NADDR=4
@SLAVE.BUS=wb32
@SLAVE.TYPE=DOUBLE
@MASTER.BUS=wbwide
@MASTER.TYPE=DMA
@MASTER.ANSPREFIX=dma_
@STREAM=i2c
@MAIN.DEFNS=
	wire	@$(PREFIX)_ready;
@MAIN.INSERT=
	wbi2cdma #(
		.AW(@$(MASTER.BUS.AWID)), .DW(@$(MASTER.BUS.WIDTH)), .SW(8),
		.OPT_LITTLE_ENDIAN(1'b0)
	) u_@$(PREFIX) (
		// {{{
		.i_clk(@$(SLAVE.BUS.CLOCK.WIRE)),
		.i_reset(@$(SLAVE.BUS.CLOCK.RESET)),
		//
		@$(SLAVE.ANSIPORTLIST),
		.S_VALID(@$(STREAM)_valid && @$(STREAM)_id == 2),
			.S_READY(@$(PREFIX)_ready),
			.S_DATA(@$(STREAM)_data), .S_LAST(@$(STREAM)_last),
		@$(MASTER.ANSIPORTLIST)
		// }}}
	);

@MAIN.ALT=
	assign	@$(PREFIX)_ready = 1'b0;
@RTL.MAKE.GROUP=@$(DEVID)
@RTL.MAKE.SUBD=wbi2c
@RTL.MAKE.FILES=wbi2cdma.v
@REGS.N=4
@REGS.0=0 R_@$(DEVID)      @$(DEVID)
@REGS.1=1 R_@$(DEVID)_ADDR @$(DEVID)ADDR
@REGS.2=2 R_@$(DEVID)_BASE @$(DEVID)BASE
@REGS.3=3 R_@$(DEVID)_LEN  @$(DEVID)LEN
##
## board.h
##
@BDEF.DEFN=
#ifndef	@$(DEVID)_H
#define	@$(DEVID)_H
	////////////////////////////////////////////////////////////////////////
	//
	// I2C DMA data structures
	// {{{
	////////////////////////////////////////////////////////////////////////
	//
	//

typedef struct  @$(DEVID)_S        {
	unsigned	id_control, id_current, id_base, id_memlen;
} @$(DEVID);

#endif	// @$(DEVID)_H
	// }}}
@BDEF.IONAME=_@$(PREFIX)
@BDEF.IOTYPE=@$(DEVID)
@BDEF.OSDEF=_BOARD_HAS_@$(DEVID)
@BDEF.OSVAL=static volatile @$(BDEF.IOTYPE) *const @$(BDEF.IONAME)=((@$(BDEF.IOTYPE) *)@$[0x%08x](REGBASE));
##
